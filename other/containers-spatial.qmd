---
title: Run labs in container
subtitle: Instructions on running the spatial labs in Docker
date: ""
author: ""
code-tools: false
format: html
engine: knitr
---

## Run Docker Locally

:::{.callout-important}
The docker containers are not tested on Microsoft Windows OS.
:::

### Local Setup

Create a new directory at a suitable location. Now you can fetch the scripts for the labs. You can either download individual `.qmd` or `.ipynb` files from the [Contents](/home_contents.html) page or clone the whole repo. If you clone the repo, navigate to `compiled/labs` to work on labs.

```
git clone --depth 1 --single-branch --branch master https://github.com/nbisweden/workshop-scRNAseq.git
cd workshop-scRNAseq/compiled/labs
```

If the `git` command is not available, you can simply go to <https://github.com/NBISweden/workshop-scRNAseq> and download the repo as a zip file and unzip it in a suitable location.


### Spatial images

Separate Docker images to run the spatial analysis are made available for `Seurat`, `Bioconductor` and `Scanpy` toolkits. All images follow the `registry/username/image:tag` convention. The image is always `ghcr.io/nbisweden/workshop-scrnaseq`. Add the appropriate tag based on the lab you are running.

An overview of the available docker images. Note the space requirements.

|Topic|Image|Size (GB)|
|---|---|---|
|Seurat spatial|`2024-seurat_spatial-r4.3.0`|6.85|
|Bioconductor spatial|`2024-bioconductor_spatial-r4.3.0`|6.47|
|Scanpy spatial|`2024-scanpy_spatial-py3.10`|3.68|

### Seurat

::: {.callout-tip}
To avoid running out of memory, restart R (_Session > Restart R_) after each lab.
:::

```
cd /path/to/labs  # replace this with the full path to the workshop compiled lab folder
docker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-seurat_spatial-r4.3.0
docker run --platform=linux/amd64 --rm -p 8788:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-seurat_spatial-r4.3.0
```

Do not close the terminal. In the browser, go to [localhost:8788](localhost:8788).  
Use the following credentials to log in to the RStudio Server:  

> User: `rstudio`  
> Password: `scrnaseq`

Navigate to `/home/rstudio/workdir/` and open qmd files

::: {layout-ncol="2"}

![RStudio login screen](assets/rstudio-login.jpg)

![RStudio preview](assets/rstudio-preview.jpg)

:::

### Bioconductor

::: {.callout-tip}
To avoid running out of memory, restart R (_Session > Restart R_) after each lab.
:::

```
cd /path/to/labs  # replace this with the full path to the workshop compiled lab folder
docker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-bioconductor_spatial-r4.3.0
docker run --platform=linux/amd64 --rm -p 8789:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-bioconductor_spatial-r4.3.0
```

Do not close the terminal. In the browser, go to [localhost:8789](localhost:8789). Use the following credentials to log in to the RStudio Server:  

> User: `rstudio`  
> Password: `scrnaseq`

Navigate to `/home/rstudio/workdir/` and open qmd files

### Scanpy

::: {.callout-tip}
To avoid running out of memory, restart the kernel (_Kernel > Restart Kernel_) after each lab.
:::

```
cd /path/to/labs  # replace this with the full path to the workshop compiled lab folder
docker pull --platform=linux/amd64 ghcr.io/nbisweden/workshop-scrnaseq:2024-scanpy_spatial-py3.10
docker run --platform=linux/amd64 --rm -p 8888:8888 -v ${PWD}:/home/jovyan/workdir ghcr.io/nbisweden/workshop-scrnaseq:2024-scanpy_spatial-py3.10
```

Do not close the terminal. At the end of the prompt, you will see a URL that starts with `http://127.0.0.1`, similar to the one below:

```
http://127.0.0.1:8888/lab?token=0a1d9ec51b91528a1d1fe2ad2c74f59ecb94c47070c2911d
```

Note that your token value will be different. Copy the entire URL (with the token) and paste it in your browser. 

::: {layout-ncol="2"}

![JupyterLab home](assets/jupyter-home.jpg)

![JupyterLab preview](assets/jupyter-preview.jpg)

:::

