---
title: Conda
date: ""
author: ""
subtitle: Instructions on setting up a Conda environment
code-tools: false
format: html
execute: 
  eval: false
---

In this workshop you can use conda environments to run the exercises. This is because conda environments allow all users to have the same computing environment, i.e. package versions. This enforces reproducibility for you to run this material without the need to install or change your local versions. See and graphical example below:

![](https://nbisweden.github.io/excelerate-scRNAseq/logos/conda_illustration.png){width="600px"}

[Conda environments](https://docs.conda.io/projects/conda/en/latest/user-guide/concepts/environments.html) are a self-contained directory that you can use in order to reproduce all your results.

Briefly, you need to:  

1. Install Conda
2. Download the `.yml` environment file
3. Create and activate the environment
4. Deactivate the environment after running your analyses

You can [read more](https://nbis-reproducible-research.readthedocs.io/en/latest/conda/) about Conda environments and other important concepts to help you make your research reproducible.

## Install Conda and Mamba

We suggest installing **Miniconda3**/**Miniforge** and NOT Anaconda.

::: {.panel-tabset}

## {{< fa brands apple >}} Mac OSX

First, make sure you have Xcode and CommandLineTools installed and updated to latest version (in AppStore). If you have not already installed CommadLineTools, go to a terminal window and run:

```bash
xcode-select --install
```

:::{.callout-caution}
If you are on an **M1** (Silicon) Mac computer you will have to use a Rosetta2 enabled terminal and install the x86_64 miniconda3 version. All R packages are not yet available as conda packages for the arm64 architecture.
:::

Just right-click on the icon for the terminal app in a Finder window and click "Get Info". There you have a selection box: "Open using Rosetta" that you need to tick before opening the application.  Then you can install the x86_64 miniconda3 following instructions below.

First download the latest version of Miniconda3 and run it to install.

```bash
curl -o Miniconda3-latest-MacOSX-x86_64.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
sh Miniconda3-latest-MacOSX-x86_64.sh
```

Follow the instructions on screen, scrolling down, pressing ENTER and replying `yes` when necessary. Install it in the default directory. Restart your terminal window to apply modifications. After restarting, you can type the command below to install Mamba:

```bash
conda init
conda install -n base -c conda-forge mamba
```

## {{< fa brands ubuntu >}} Ubuntu

First download the latest version of Miniconda3 and run it to install.

```bash
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
sh Miniconda3-latest-Linux-x86_64.sh
```

Follow the instructions on screen replying `yes` when necessary. Restart your terminal window to apply modifications. After restarting, you can type the command below to install Mamba:

```bash
conda init
conda install -n base -c conda-forge mamba
```

## {{< fa brands windows >}} Windows 10

Unfortunately, not all packages available on conda are compatible with windows machines. The good news is that Windows 10 offers native linux support via the Windows Subsystem for Linux (WSL2). This allows you to run linux/bash commands from within windows without the need of a virtual machine nor a dual-boot setup (i.e. having 2 operating systems). However, WSL does not offer a complete support for graphical interfaces (such as RStudio in our case), so we need additional steps to make that happen.

1. On Windows 10, install the WSL if you don't have it. Follow the instructions here:
[https://docs.microsoft.com/en-us/windows/wsl/install-win10](https://docs.microsoft.com/en-us/windows/wsl/install-win10)

2. Once you have that installed, you can download and install MobaXterm (which is the enhanced terminal with graphical capacity):
[https://mobaxterm.mobatek.net](https://mobaxterm.mobatek.net)  
It is recommended that you INSTALL the program and not use the portable version.

3. Inside MobaXterm, you will probably will see that your WSL is already listed on the left panel as an available connection. Just double-click it and you will be accessing it via MobaXterm. If by any chance you don't see it there, close MobaXterm and go to the WSL terminal, because probably the WSL is not allowing SSH connections. You can follow this [link](https://www.illuminiastudios.com/dev-diaries/ssh-on-windows-subsystem-for-linux/) for the instructions on how to do it. You need to complete until the step `Start or restart the SSH service`, while the further steps are optional, but might be useful.

4. Inside MobaXterm, download Conda with the command:

```bash
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
```

5. Inside MobaXterm, type the commands below to install Conda. Follow the instructions for the installation there.

```bash
cd ~/Downloads
sh Miniconda3-latest-Linux-x86_64.sh
```

6. Inside MobaXterm, Follow the instructions on screen replying `yes` when necessary. Restart your terminal window to apply modifications. After restarting, you can type the command below to install Mamba:

```bash
conda init
conda install -n base -c conda-forge mamba
```

7. Inside MobaXterm, type the commands below to install the X-server graphical packages that will be used to launch RStudio.
[https://docs.anaconda.com/anaconda/install/linux/](https://docs.anaconda.com/anaconda/install/linux/)

```bash
sudo apt-get update
sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
```

8. Close and open all application and Inside MobaXterm, you will probably will see that your WSL is already listed on the left panel as an available connection. Just double-click it and you will be accessing it via MobaXterm.


## {{< fa solid box >}} VirtualBox

If by any means you see that the installations are not working as it should on your computer, you can try to create a virtual machine to run UBUNTU and install everything there. But please keep this alternative as the last temporary resourse, as we recommend troubleshooting the installation o the up-mentioned methods.

1. Download and install on your machine VIRTUALBOX
[https://www.virtualbox.org](https://www.virtualbox.org)

2. Download the ISO disk of UBUNTU
[https://ubuntu.com/download/desktop](https://ubuntu.com/download/desktop)

3. On VIRTUALBOX, click on `Settings` (yellow engine) > `General` > `Advanced` and make sure that both settings **Shared Clipboard** and **Drag'n'Drop** are set to `Bidirectional`.

4. Completely close VIRTUALBOX and start it again to apply changes.

5. On VIRTUALBOX, create a machine called Ubuntu and add the image above
- set the memory to the maximum allowed in the GREEN bar
- set the hard disk to be dynamic allocated
- all other things can be default

6. Proceed with the Ubuntu installation as recommended. You can set to do "Minimal Installation" and deactivate to get updates during installation.

7. Inside Ubuntu, open TERMINAL and type the commands below to install the X-server graphical packages that will be used to launch RStudio.
[https://docs.anaconda.com/anaconda/install/linux/](https://docs.anaconda.com/anaconda/install/linux/)

```bash
sudo apt-get update
sudo apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
```

8. Inside UBUNTU, Download conda:

```bash
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
```

9. Inside UBUNTU, open the TERMINAL and type the commands below. Follow the instructions for the installation there.

```bash
cd ~/Downloads
sh Miniconda3-latest-Linux-x86_64.sh
```

10. Close Terminal to apply the CONDA updates. Then you can create a course folder, download the environment file and create the environment:

```bash
mkdir ~/Desktop/course
cd ~/Desktop/course
wget https://raw.githubusercontent.com/NBISweden/workshop-scRNAseq/master/other/conda.yml
conda env create -f conda.yml
```

11. You can then follow the instructions above to activate/deactivate the environment.

```
conda activate workshop-scrnaseq
```

:::

## Create a conda environment from file

Download the `conda.yml` file:

<a class="btn btn-secondary" href="other/conda.yml" role="button">conda.yml {{< fa download >}}</a>

Save it anywhere. The location does not matter. Then, type this in the folder with that file:

```bash
mamba env create -n workshop-scrnaseq -f conda.yml
```

Several messages will show up on your screen and will tell you about the installation process. This may take a few minutes depending on how many packages are to be installed.

```
##Collecting package metadata: done
##Solving environment: done
##
##Downloading and Extracting Packages
##libcblas-3.8.0       | 6 KB      | ############################################################################# | 100%
##liblapack-3.8.0      | 6 KB      | ############################################################################# | 100%
##...
##Preparing transaction: done
##Verifying transaction: done
##Executing transaction: done
```

## Activate the environment

Once the environment is created, we need to activate it in order to use the softwares and packages inside it. To activate an environment type:

```bash
conda activate workshop-scrnaseq
```

From this point on you can run any of the contents from the workshop.

## Deactivate the environment

After you've ran all your analyses, you can deactivate the environment by typing:

```bash
conda deactivate
```
