# How To Run the Labs

Three different toolkits, namely **`Seurat`** (R/RStudio), **`Bioconductor`** (R/RStudio) and **`Scanpy`** (Python/Jupyter) are available to perform the scRNAseq analysis. The labs can be run on Uppmax using Singularity (Apptainer) or on your local machine using Docker. Both options provide the necessary environment to run the analysis.

## **Option A:** Run Singularity on Uppmax (Recommended)

### Launch RStudio

::: {.callout-tip}
To avoid running out of memory, restart R (_Session > Restart R_) after each lab.
:::


#### Seurat

To launch RStudio Server and run the `Seurat` labs perform the following steps:

```bash
cd /path/to/workdir  # replace this with the full path to the workshop folder
/sw/courses/scrnaseq/singularity/launch_rstudio.sh /sw/courses/scrnaseq/singularity/2023-seurat-r4.3.0.sif
```

#### Bioconductor

To launch RStudio Server and run the `Bioconductor` labs perform the following steps:

```bash
cd /path/to/workdir  # replace this with the full path to the workshop folder
/sw/courses/scrnaseq/singularity/launch_rstudio.sh /sw/courses/scrnaseq/singularity/2023-bioconductor-r4.3.0.sif
```

### Connect to RStudio

After executing the `launch_rstudio.sh` script, a message with *your* login credentials will be printed to your screen, and it looks similar to the one below.

::: {.callout-important}
Do not close this terminal!
:::

```
        *************************************************
        *                                               *
        *  IMPORTANT: Do not close or exit this shell!  *
        *                                               *
        *************************************************

1. SSH tunnel from your workstation using the following command:

   ssh -N -L 8787:rackham3.uppmax.uu.se:58359 susanner@rackham3.uppmax.uu.se

   and point your web browser to http://localhost:8787

2. log in to RStudio Server using the following credentials:

   user: susanner
   password: scrnaseq

When done using RStudio Server, terminate the job by:

1. Exit the RStudio Session ("power" button in the top right corner of the RStudio window).
2. Issue the following command in both shells:

      CTRL-C
```

Follow the instructions printed on the screen to launch the RStudio Server. Open a shell *locally* and run *your* `ssh` command from step 1. Then open [localhost:8787](localhost:8787) in your web browser and log in to the RStudio Server using *your* `user` and `password` provided in step 2.

### Launch JupyterLab

#### Scanpy

To launch JupyterLab and run the `Scanpy` labs using Jupyter notebooks perform the following steps:

::: {.callout-tip}
To avoid running out of memory, restart the kernel (_Kernel > Restart Kernel_) after each lab.
:::

```bash
cd /path/to/workdir  # replace this with the full path to the workshop folder
/sw/courses/scrnaseq/singularity/launch_jupyter.sh /sw/courses/scrnaseq/singularity/2023-scanpy-py3.10.sif
```

### Connect to JupyterLab

After executing the `launch_jupyter.sh` script, a message with *your* login credentials will be printed to your screen, and it looks similar to the one below.

::: {.callout-important}
Do not close this terminal!
:::

```
        *************************************************
        *                                               *
        *  IMPORTANT: Do not close or exit this shell!  *
        *                                               *
        *************************************************

1. SSH tunnel from your workstation using the following command:

   ssh -N -L 8888:rackham1.uppmax.uu.se:34968 susanner@rackham1.uppmax.uu.se

   point your web browser to http://localhost:8888/lab

2. Log in to JupyterLab using the password:

   scrnaseq

When done using JupyterLab, terminate the job by:

1. Shut down all kernels.
2. Issue the following command in both shells:

   CTRL-C
```

Follow the instructions to launch the JupyterLab. Open a shell *locally* and run *your* `ssh` command from step 1. Then open [localhost:8888/lab](localhost:8888/lab) in your web browser and log in to the JupyterLab using the password provided in step 2.


## **Option B:** Run Docker Locally

### Seurat

::: {.callout-tip}
To avoid running out of memory, restart R (_Session > Restart R_) after each lab.
:::

```bash
cd /path/to/workshop-dir  # replace this with the full path to the workshop folder
docker pull ghcr.io/nbisweden/workshop-scrnaseq:2023-seurat-r4.3.0
docker run --rm -ti -p 8787:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2023-seurat-r4.3.0
```

In the browser, go to [localhost:8787](localhost:8787).  
Use the following credentials to log in to the RStudio Server:  

> User: `rstudio`  
> Password: `scrnaseq`

### Bioconductor

::: {.callout-tip}
To avoid running out of memory, restart R (_Session > Restart R_) after each lab.
:::

```bash
cd /path/to/workshop-dir  # replace this with the full path to the workshop folder
docker pull ghcr.io/nbisweden/workshop-scrnaseq:2023-bioconductor-r4.3.0
docker run --rm -ti -p 8787:8787 -e PASSWORD=scrnaseq -v ${PWD}:/home/rstudio/workdir ghcr.io/nbisweden/workshop-scrnaseq:2023-bioconductor-r4.3.0
```

In the browser, go to [localhost:8787](localhost:8787). Use the following credentials to log in to the RStudio Server:  

> User: `rstudio`  
> Password: `scrnaseq`

::: {.callout-important}
Do not close this terminal.
:::


### Scanpy

::: {.callout-tip}
To avoid running out of memory, restart the kernel (_Kernel > Restart Kernel_) after each lab.
:::

```bash
cd /path/to/workshop-dir  # replace this with the full path to the workshop folder
docker pull ghcr.io/nbisweden/workshop-scrnaseq:2023-scanpy-py3.10
docker run --rm -ti -p 8888:8888 -v ${PWD}:/home/jovyan/workdir ghcr.io/nbisweden/workshop-scrnaseq:2023-scanpy-py3.10
```

At the end of the prompt, you will see a URL that starts with `http://127.0.0.1`, similar to the one below:

```
http://127.0.0.1:8888/lab?token=0a1d9ec51b91528a1d1fe2ad2c74f59ecb94c47070c2911d
```

Note that your token value will be different. Copy the entire URL (with the token) and paste it in your browser. 

::: {.callout-important}
Do not close this terminal.
:::
